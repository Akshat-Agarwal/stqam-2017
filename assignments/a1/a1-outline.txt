## A1 (due after L12)



## question 1

provide adequate statement and branch coverage of some significant code; argue that your coverage is sufficient (L6-7)

significant code: guava ConfigurableMutableValueGraph?
criteria - open-source Java code, maybe 1000 lines, use coverage tool of your choice

## question 2 (L5)
next few questions are about the 'average' dart webapp

exploratory testing of WaterlooWorks or average

-> figure out what is an input
-> set up docker instance / patricklam.ca

## question 3

programmatically generate test cases of various sizes; try to create lifelike distribution of marks (SE averages (84.3), MATH 117 = 83.1 (80.3), CS 137 = 82.8 (81), ECE 140 = 89 (!) (76.9), ECE 105 = 82.2 (76.5))

empirically determine the scalability of the app (either by manually timing JS execution or by adding a test harness that drives the app)

## question 4 (L8-11)

manually generate a test case that exposes a bug; can either be code or a unit test
think about the program's input space and poke at corners of the input space
provide a fix

## question 5 (L8-9)

navigation structure of average webapp (SRTC)


